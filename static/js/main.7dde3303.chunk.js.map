{"version":3,"sources":["page.js","foo.page.js","bar.page.js","home.page.js","page-container.js","App.js","index.js"],"names":["Page","children","enableScrollHandler","disableScrollHandler","props","ref","useRef","document","createElement","useState","BehaviorSubject","animationEvents$","loadedEvents$","history","useHistory","pipe","withLatestFrom","map","type","loaded","phase","enhancedLoadedEvents$","enhancedAnimationEvents$","merge","events$","onEnter","next","onEntered","onExit","onExited","fixPosition","page","current","Object","assign","style","position","useEffect","scroll","subscribe","get","scrollTop","window","scrollTo","unfixPosition","pageYOffset","match","CSSTransition","unmountOnExit","in","timeout","classNames","className","FooPage","loadedEvent","to","BarPage","text","setText","setTimeout","dangerouslySetInnerHTML","__html","HomePage","PageContainer","canReplaceHistory","timeoutId","addEventListener","clearTimeout","tid","path","location","pathname","replace","scrollRestoration","App","basename","process","exact","loadedEvent$","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7dde3303.chunk.js","sourcesContent":["import React , { useEffect, useState, useRef} from 'react';\nimport { Route, useHistory } from 'react-router-dom'\nimport { map, withLatestFrom } from 'rxjs/operators';\nimport { CSSTransition } from 'react-transition-group';\nimport get from 'lodash/get';\nimport { merge, BehaviorSubject } from 'rxjs';\nconst ENTER = 'enter';\nconst ENTERED = 'entered';\nconst EXIT = 'exit';\nconst EXITED = 'exited';\n\nconst ANIMATION = 'animation';\nconst LOADING = 'loading';\n\n/*\n *  detect when content is loaded. at that point - show it\n *  That could be at any point. \n *\n */\n\n/*\n *  animation events\n *  -----a----b-------c-------d---------->\n *\n *  content loaded events\n *  ---------------1---------------------->\n *\n *  content loaded events with last animation event\n *  ---------------1b--------------------->\n *\n *  animation events with last loaded event\n *  ----a_-----b_------c1----d1------->\n *\n *  merge of previous two Obervables\n *  ----a_----b_----1b---c1----d1---->\n *\n *\n *  There are two kinds of events that we are interested in: Animation events and content loaded events.\n *  When the transition runs, the CSS Transition component fires 4 events: Enter, Entered, Exit, and Exited.\n *  When a component loads content it fires a content loaded event.\n *\n *  The content loaded event can occur at any time. For static content, we need to fire it at the very start of the transition, or just assume that the content loaded state is true.o\n *\n *  To make transition animations work, we need to save the scroll at the right time, then restore it later on. The mechanics of this are quite intricate. In essence, we need to do different things according to the event that is being handled, and subject to which events have already occurred. \n *\n *\n */\n\nexport function Page({ children, enableScrollHandler, disableScrollHandler, ...props}) {\n  const ref = useRef(document.createElement('div'));\n  const [animationEvents$] = useState(new BehaviorSubject());\n  const [loadedEvents$] = useState(new BehaviorSubject());\n  const history = useHistory();\n\n  const [enhancedLoadedEvents$] = useState(loadedEvents$.pipe(\n    withLatestFrom(animationEvents$),\n    map(([loaded, phase]) => ({\n      type: LOADING,\n      loaded,\n      phase,\n    })),\n  ));\n\n  const [enhancedAnimationEvents$] = useState(animationEvents$.pipe(\n    withLatestFrom(loadedEvents$),\n    map(([phase, loaded]) => ({\n      type: ANIMATION,\n      loaded,\n      phase,\n    })),\n  ));\n\n  const [events$] = useState(merge(enhancedLoadedEvents$, enhancedAnimationEvents$));\n\n  useEffect(() => {\n    let scroll;\n\n    events$.subscribe(({type, loaded, phase}) => {\n\n      if (type === LOADING && loaded) {\n        scroll = get(history, 'location.state.scroll', 0);\n\n        switch(phase) {\n          case ENTER:\n\n            ref.current.scrollTop = scroll;\n\n            break;\n          case ENTERED:\n\n            window.scrollTo(0, scroll);\n\n            enableScrollHandler();\n\n            break;\n          default:\n            // do nothing\n        }\n      }\n\n      if (type === ANIMATION) {\n        switch(phase) {\n          case ENTER:\n            disableScrollHandler();\n\n            fixPosition();\n\n            if (loaded) {\n              scroll = get(history, 'location.state.scroll', 0);\n\n              ref.current.scrollTop = scroll;\n            }\n\n            break;\n          case ENTERED:\n            unfixPosition();\n\n            if (loaded) {\n              scroll = get(history, 'location.state.scroll', 0);\n\n              window.scrollTo(0, scroll);\n\n              enableScrollHandler();\n            }\n\n\n            break;\n          case EXIT:\n            disableScrollHandler();\n\n            scroll = window.pageYOffset;\n\n            fixPosition();\n\n            ref.current.scrollTop = scroll;\n\n            break;\n\n          case EXITED:\n            break;\n\n          default:\n            // do nothing\n        }\n      }\n\n    });\n\n  }, [loadedEvents$, disableScrollHandler, enableScrollHandler, events$, history]);\n\n\n  function onEnter() {\n    animationEvents$.next(ENTER);\n  }\n\n  function onEntered() {\n    animationEvents$.next(ENTERED);\n  }\n\n  function onExit() {\n    animationEvents$.next(EXIT);\n  }\n\n  function onExited() {\n    animationEvents$.next(EXITED);\n    loadedEvents$.next(false);\n  }\n\n  function fixPosition() {\n    const page = ref.current;\n\n    Object.assign(page.style, {\n      position: 'fixed',\n    });\n  }\n\n  function unfixPosition() {\n    const page = ref.current;\n\n    Object.assign(page.style, {\n      position: 'static',\n    });\n  }\n  \n  return (\n    <Route {...props}>{\n      ({match}) => {\n\n        return (\n        <CSSTransition\n          unmountOnExit\n          in={match !== null}\n          timeout={400}\n          onEnter={onEnter}\n          onExit={onExit}\n          onEntered={onEntered}\n          onExited={onExited}\n          classNames=\"page\"\n        >\n          <div ref={ref} className=\"page-container\">\n            {children(loadedEvents$)}\n          </div>\n        </CSSTransition>\n      )\n      }\n    }</Route>\n  );\n}\n","import React, {useEffect} from 'react';\nimport { Link } from 'react-router-dom'\n\nexport function FooPage({loadedEvent}) {\n\n  useEffect(() => {\n    loadedEvent.next(true);\n  }, [loadedEvent]);\n  return (\n\n    <div className=\"foo-page\">\n\n    <p>\n1. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\n            <Link to=\"/bar\">Bar</Link>\n    </p>\n    <p>\n2. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n    </p>\n    <p>\n3. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n    </p>\n    <p>\n4. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n    </p>\n    </div>\n\n  );\n}\n","import React, { useState, useEffect }  from 'react';\nimport { Link } from 'react-router-dom'\n\nconst bodyText = `\n        <p>\n         \"The captain goes down with the ship\" is a maritime tradition that a sea captain holds ultimate responsibility for both his ship and everyone embarked on it, and that in an emergency, he will either save them or die trying. Although often connected to the sinking of RMS Titanic in 1912 and its captain, Edward J. Smith, the tradition precedes Titanic by at least 11 years.In most instances, the captain forgoes his own rapid departure of a ship in distress, and concentrates instead on saving other people. It often results in either the death or belated rescue of the captain as the last person on board. \n    The tradition says that a captain will be the last person to leave a ship alive before its sinking or utter destruction, and if unable to evacuate the crew and passengers, the captain will not save themself even if they can.In a social context, especially as a mariner, the captain will feel compelled to take this responsibility as a social norm.\n        </p>\n        <p>\n    In maritime law, the ship's master's responsibility for their vessel is paramount no matter what its condition, so abandoning a ship has legal consequences, including the nature of salvage rights. Therefore, even if a captain abandons their ship in distress, they are generally responsible for it in their absence and would be compelled to return to the ship until the danger to the vessel has relented. If a naval captain evacuates a vessel in wartime, it may be considered a serious crime similar to desertion, unless they subsequently return to the ship at their first opportunity to prevent its capture and rescue the crew.\n\n        </p>\n        <p>\n    Abandoning a ship in distress may be considered a crime that can lead to imprisonment. Captain Francesco Schettino, who left his ship in the midst of the Costa Concordia disaster, was not only widely reviled for his actions, but lost his final appeal against his 16-year Italian prison sentence, including one year for abandoning his passengers, five years for causing the shipwreck, and ten years for the manslaughter of its victims. Abandoning ship is a maritime crime that has been on the books for centuries in Spain, Greece, and Italy. South Korean law may also require the captain to rescue themself last.In Finland the Maritime Law (Merilaki) states that the captain must do everything in their power to save everyone on board the ship in distress and that unless their life is in immediate danger, they shall not leave the vessel as long as there is reasonable hope that it can be saved.In the United States, abandoning the ship is not explicitly illegal, but the captain could be charged with other crimes, such as manslaughter, which encompass common law precedent passed down through centuries. It is not illegal under international maritime law.\n        </p>\n\n`;\nexport function BarPage({loadedEvent}) {\n  const [text, setText ] = useState('');\n\n  useEffect(() => {\n    setTimeout(() => {\n      /*\n       *  content loaded. Need to signal this to parent component\n       *\n       */\n\n      setText(bodyText);\n\n      /*\n       *  tell parent component that content has been loaded\n       *\n       */\n\n      loadedEvent.next(true);\n    }, 600);\n  }, [loadedEvent]);\n\n  return (\n    <>\n      <div className=\"bar-page\">\n        <Link to=\"/foo\">Foo</Link>\n        <div dangerouslySetInnerHTML={{__html: text }} />\n        <Link to=\"/foo\">Foo</Link>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nexport function HomePage() {\n  return (\n    <>\n    <div>\n    <p>\n    There has long been a theory, expressed by historian and former British naval intelligence officer Patrick Beesly and authors Colin Simpson and Donald E. Schmidt among others, that Lusitania was deliberately placed in danger by the British authorities, so as to entice a U-boat attack and thereby drag the US into the war on the side of Britain.[99] [100] A week before the sinking of Lusitania, Winston Churchill wrote to Walter Runciman, the President of the Board of Trade, stating that it is \"most important to attract neutral shipping to our shores, in the hope especially of embroiling the United States with Germany.\"[101][100]\n\n    </p><p>\nBeesly concludes: \"unless and until fresh information comes to light, I am reluctantly driven to the conclusion that there was a conspiracy deliberately to put Lusitania at risk in the hope that even an abortive attack on her would bring the United States into the war. Such a conspiracy could not have been put into effect without Winston Churchill's express permission and approval.\"[99]\n\n    </p>\n    <p>\nAt the post-sinking inquiry Captain Turner refused to answer certain questions on the grounds of war-time secrecy imperatives. The British government continues to keep secret certain documents relating to the final days of the voyage, including certain of the signals passed between the Admiralty and Lusitania. The records that are available are often missing critical pages, and lingering questions include the following: [102][103][104][105]\n\n    </p><p>\nWere the British authorities aware (thanks to the secret decryption activities of Room 40) that a German submarine was in the path of Lusitania, but failed to divert the ship to a safer route?\nDid they also fail to provide a destroyer escort, although destroyers were available in a nearby port?\nWas the ship ordered to reduce speed in the war zone, for reasons that have been kept secret ever since?\nHow did such a big ship sink so quickly from a single torpedo strike?\n      <Link to=\"/foo\">Foo</Link>\n    </p>\n    </div>\n    </>\n  );\n}\n","import React, { useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport function PageContainer({canReplaceHistory, children}) {\n  const history = useHistory();\n  const timeoutId = useRef(null);\n\n  useEffect(() => {\n\n    window.addEventListener('scroll', () => {\n\n      /*\n       *  We only want this to run after the user has stopped scrolling\n       */\n\n      clearTimeout(timeoutId.current);\n\n      const tid = setTimeout(() => {\n        if (canReplaceHistory.current) {\n          \n          const path = history.location.pathname;\n          history.replace(path, { scroll: window.pageYOffset});\n        }\n      }, 500);\n\n      timeoutId.current = tid;\n    });\n  }, [history, canReplaceHistory]);\n\n  return (\n    <div>\n      {children}\n    </div>\n  );\n}\n","import React, {useRef } from 'react';\nimport 'reset-css';\nimport './App.css';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Page } from './page';\nimport { FooPage } from './foo.page';\nimport { BarPage } from './bar.page';\nimport { HomePage } from'./home.page';\nimport { PageContainer } from './page-container';\n\nwindow.history.scrollRestoration = 'manual';\n\nfunction App() {\n  const canReplaceHistory = useRef(true);\n\n  function enableScrollHandler() {\n    canReplaceHistory.current = true;\n  }\n\n  function disableScrollHandler() {\n    canReplaceHistory.current = false;\n  }\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      \n      <div className=\"App\">\n        <div className=\"container\">\n          <PageContainer canReplaceHistory={canReplaceHistory}>\n            <Page\n              enableScrollHandler={enableScrollHandler}\n              disableScrollHandler={disableScrollHandler}\n              exact\n              path=\"/\">\n              {(loadedEvent$) => (\n                <HomePage loadedEvent={loadedEvent$}/>\n              )}\n            </Page>\n\n            <Page\n              enableScrollHandler={enableScrollHandler}\n              disableScrollHandler={disableScrollHandler}\n              path=\"/bar\">\n              {(loadedEvent$) => (\n                <BarPage loadedEvent={loadedEvent$}/>\n              )}\n            </Page>\n\n            <Page\n              enableScrollHandler={enableScrollHandler}\n              disableScrollHandler={disableScrollHandler}\n              path=\"/foo\">\n              {(loadedEvent$) => (\n                <FooPage loadedEvent={loadedEvent$}/>\n              )}\n            </Page>\n          </PageContainer>\n\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}